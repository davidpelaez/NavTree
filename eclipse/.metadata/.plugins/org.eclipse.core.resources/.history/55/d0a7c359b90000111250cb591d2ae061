package peasy2d;

import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;

import peasy2d.PeasyCam.PeasyMouseListener;
import peasy2d.PeasyCam.PeasyMousewheelListener;
import processing.core.*;


public class PeasyCam2D {
	
	private PApplet parent;
	private float zoom = 1;
	private float tx = 0;
	private float ty = 0;
	
	private final InterpolationManager zoomInterps = new InterpolationManager();
	
	private final PeasyDragHandler panHandler /* ha ha ha */= new PeasyDragHandler() {
		public void handleDrag(final double dx, final double dy) {
			dampedPanX.impulse(dx / 8.);
			dampedPanY.impulse(dy / 8.);
		}
	};
	
	private final PeasyWheelHandler zoomWheelHandler = new PeasyWheelHandler() {
		public void handleWheel(final int delta) {
			dampedZoom.impulse(wheelScale * delta);
		}
	};
	private PeasyWheelHandler wheelHandler = zoomWheelHandler;
	private double wheelScale = 1.0;
	
	private final PeasyMouseListener mouseListener = new PeasyMouseListener();
	private final PeasyMousewheelListener mouseWheelListener = new PeasyMousewheelListener();
	
	dampedZoom = new DampedAction(this) {
		@Override
		protected void behave(final double velocity) {
			mouseZoom(velocity);
		}
	};

	dampedPanX = new DampedAction(this) {
		@Override
		protected void behave(final double velocity) {
			mousePan(velocity, 0);
		}
	};

	dampedPanY = new DampedAction(this) {
		@Override
		protected void behave(final double velocity) {
			mousePan(0, velocity);
		}
	};

	setActive
	
	public PeasyCam2D(PApplet _parent){
		parent = _parent;
	}
	
	public void feed(){
		parent.scale(zoom);
		parent.translate(tx, ty);
	}


	
}
