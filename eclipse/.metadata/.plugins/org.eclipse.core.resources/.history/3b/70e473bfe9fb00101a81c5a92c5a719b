package navtree;

import processing.core.*;
import org.json.*;

public class Navtree {

	public java.util.HashMap<Integer, Node> nodeTable;
	public Node[] nodes = new Node[100];
	public Edge[] edges = new Edge[500];
	int nodeCount = 0, edgeCount = 0;

	Navtree() {
		String[] myJsonStrings = loadJson();

	}

	private void addEdge(int fromId, int toParentId) {
		Edge e = new Edge(fromId, toParentId);
		if (edgeCount == edges.length) {
			edges = (Edge[]) PApplet.expand(edges);
		}
		edges[edgeCount++] = e;
	}

	private void addNode(JSONObject nodeData) {
		//Load the JSON data as variables
		//Create the Node
		//Check Nodes size or Expand
		//Append node increasing nodeCount
		//Create edge between node and its parent unless it's root
		Node n = new Node(label);
		if (nodeCount == nodes.length) {
		nodes = (Node[]) expand(nodes);
		}
		nodeTable.put(label, n);
		nodes[nodeCount++] = n;
		return n;
	}
	
	//TODO: Modify the behaviour because all nodes will be added when find is to be used

	public Node findNode(int id) {
		Node n = (Node) nodeTable.get(id);
		if (n == null) {
			throw new RuntimeException("The requested node isn't registered. Possible bug or Json Navtree integrity error.");
		}
		return n;
	}

}
