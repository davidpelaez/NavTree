package navtree;

public class Node {

	public int id, parentId, extra;
	public int unix_date;
	public String url;
	public int[] children = null; // Array with the ids of the children
	public boolean isRoot, hasChildren;
	public Navtree navtree;

	Node(Navtree _navtree, int _id, String _url, int _parentId,
			boolean _isRoot, int _extra, int _unixDate, boolean _hasChildren,
			String _childrenIds) {
		navtree = _navtree;
		id = _id;
		parentId = _parentId;
		isRoot = _isRoot;
		extra = _extra;
		unix_date = _unixDate;
		hasChildren = _hasChildren;
		// Process children IDS
		if (_childrenIds.length() > 0) {
			String[] splitted = _childrenIds.split(",");
			children = new int[splitted.length];
			for (int i = 0; i < children.length; i++) {
				children[i] = Integer.parseInt(splitted[i].trim());
			}
		}

	}//Constructor ends
	
	
	 public boolean isRoot() {
		    return isRoot;
		  }
	 
	 public boolean hasChildren() {
		    return hasChildren;
		  }

}
